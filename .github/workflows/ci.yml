name: Playwright Test Framework (Turbo Mode)

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - fb_*
  push:
    branches:
      - master
      - fb_*
  schedule:
    - cron: '0 0 * * *'

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [ chrome, firefox, msedge ]
        shard: [ 1, 2, 3, 4 ]  # Split tests into 4 shards
      fail-fast: false
      max-parallel: 12  # Run up to 12 jobs in parallel
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            target
          key: maven-${{ hashFiles('**/pom.xml') }}-${{ matrix.shard }}
          restore-keys: |
            maven-

      - name: Build Project
        run: |
          mvn -B install -DskipTests --no-transfer-progress -T 4C

      - name: Install Browsers
        run: |
          mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"

      - name: Run Unit Tests (Shard ${{ matrix.shard }})
        run: |
          mvn clean test -Drunmode=headless -Dbrowser=${{ matrix.browser }} \
                         -Dgroups=SWAG_LABS_UNIT \
                         -Dtestng.parallel=classes \
                         -Dthreads=4 -Ddataproviderthreadcount=4 \
                         -Dshard=${{ matrix.shard }}/4 \
                         -Dmaven.test.failure.ignore=true

      - name: Generate Coverage Report
        run: |
          mvn jacoco:report

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ secrets.CODECOV_SLUG }}
          verbose: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.browser }}-shard-${{ matrix.shard }}
          path: |
            ${{ github.workspace }}/target
            ${{ github.workspace }}/reports
          compression-level: 0  # Fastest compression

  smoke_tests:
    name: Run Smoke Tests
    runs-on: ubuntu-latest
    needs: build_and_test
    strategy:
      matrix:
        browser: [ chrome, firefox, msedge ]
        shard: [ 1, 2, 3 ]  # Split smoke tests into 3 shards
      fail-fast: false
      max-parallel: 9
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.browser }}-shard-*  # Download all shards
          path: ${{ github.workspace }}/target

      - name: Run Smoke Tests (Shard ${{ matrix.shard }})
        run: |
          mvn clean test -Drunmode=headless -Dbrowser=${{ matrix.browser }} \
                         -Dgroups=SWAG_LABS_SMOKE \
                         -Dtestng.parallel=methods \
                         -Dthreads=4 -Ddataproviderthreadcount=4 \
                         -Dshard=${{ matrix.shard }}/3

      - name: Generate Test Summary
        uses: test-summary/action@v2
        id: summary
        with:
          paths: "target/surefire-reports/TEST-*.xml"
        if: always()

      - name: Send Results to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          # Gather metrics from test-summary output
          passed="${{ steps.summary.outputs.passed }}"
          failed="${{ steps.summary.outputs.failed }}"
          skipped="${{ steps.summary.outputs.skipped }}"
          total="${{ steps.summary.outputs.total }}"
          pass_percentage=$(awk "BEGIN {print ($passed/$total)*100}")
          fail_percentage=$(awk "BEGIN {print ($failed/$total)*100}")
          
          content="-----------------------------------\n\n"
          content+="üõ†Ô∏è **Job: ${{ github.job }}**\n"
          content+="üë§ **User: ${{ github.actor }}**\n"
          content+="üåé **Browser: ${{ matrix.browser }}**\n"
          content+="üî¢ **Shard: ${{ matrix.shard }}/3**\n"
          content+="üéâ **Passed**: ${passed}\n"
          content+="‚ùå **Failed**: ${failed}\n"
          content+="‚ö†Ô∏è **Skipped**: ${skipped}\n"
          content+="üìä **Total**: ${total}\n\n"
          content+="‚úÖ **Pass %**: ${pass_percentage}%\n"
          content+="‚ùå **Fail %**: ${fail_percentage}%\n\n"
          content+="-----------------------------------\n\n"
          curl --location "$DISCORD_WEBHOOK_URL" \
               --header 'Content-Type: application/json' \
               --data-raw "{
                   \"content\": \"$content\",
                   \"username\": \"TestBot\"
               }"

  regression_tests:
    name: Run Regression Tests
    runs-on: ubuntu-latest
    needs: build_and_test
    strategy:
      matrix:
        browser: [ chrome, firefox, msedge ]
        shard: [ 1, 2, 3, 4, 5 ]  # Split regression tests into 5 shards
      fail-fast: false
      max-parallel: 15
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.browser }}-shard-*
          path: ${{ github.workspace }}/target

      - name: Run Regression Tests (Shard ${{ matrix.shard }})
        run: |
          mvn clean test -Drunmode=headless -Dbrowser=${{ matrix.browser }} \
                         -Dgroups=SWAG_LABS_REGRESSION \
                         -Dtestng.parallel=classes \
                         -Dthreads=4 -Ddataproviderthreadcount=4 \
                         -Dshard=${{ matrix.shard }}/5

      - name: Generate Test Summary
        uses: test-summary/action@v2
        id: summary
        with:
          paths: "target/surefire-reports/TEST-*.xml"
        if: always()

      - name: Send Results to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          # Gather metrics from test-summary output
          passed="${{ steps.summary.outputs.passed }}"
          failed="${{ steps.summary.outputs.failed }}"
          skipped="${{ steps.summary.outputs.skipped }}"
          total="${{ steps.summary.outputs.total }}"
          pass_percentage=$(awk "BEGIN {print ($passed/$total)*100}")
          fail_percentage=$(awk "BEGIN {print ($failed/$total)*100}")
          content="-----------------------------------\n\n"
          content+="üõ†Ô∏è **Job: ${{ github.job }}**\n"
          content+="üë§ **User: ${{ github.actor }}**\n"
          content+="üåé **Browser: ${{ matrix.browser }}**\n"
          content+="üî¢ **Shard: ${{ matrix.shard }}/5**\n"
          content+="üéâ **Passed**: ${passed}\n"
          content+="‚ùå **Failed**: ${failed}\n"
          content+="‚ö†Ô∏è **Skipped**: ${skipped}\n"
          content+="üìä **Total**: ${total}\n\n"
          content+="‚úÖ **Pass %**: ${pass_percentage}%\n"
          content+="‚ùå **Fail %**: ${fail_percentage}%\n\n"
          content+="-----------------------------------\n\n"
          curl --location "$DISCORD_WEBHOOK_URL" \
               --header 'Content-Type: application/json' \
               --data-raw "{
                   \"content\": \"$content\",
                   \"username\": \"TestBot\"
               }"

  e2e_tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs:
      - build_and_test
      - smoke_tests
      - regression_tests
    strategy:
      matrix:
        browser: [ chrome, firefox, msedge ]
        shard: [ 1, 2 ]  # Split E2E tests into 2 shards
      fail-fast: false
      max-parallel: 6
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.browser }}-shard-*
          path: ${{ github.workspace }}/target

      - name: Run E2E Tests (Shard ${{ matrix.shard }})
        run: |
          mvn clean test -Drunmode=headless -Dbrowser=${{ matrix.browser }} \
                         -Dgroups=SWAG_LABS_E2E \
                         -Dtestng.parallel=methods \
                         -Dthreads=4 -Ddataproviderthreadcount=4 \
                         -Dshard=${{ matrix.shard }}/2

      - name: Generate Test Summary
        uses: test-summary/action@v2
        id: summary
        with:
          paths: "target/surefire-reports/TEST-*.xml"
        if: always()

      - name: Send Results to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          # Gather metrics from test-summary output
          passed="${{ steps.summary.outputs.passed }}"
          failed="${{ steps.summary.outputs.failed }}"
          skipped="${{ steps.summary.outputs.skipped }}"
          total="${{ steps.summary.outputs.total }}"
          pass_percentage=$(awk "BEGIN {print ($passed/$total)*100}")
          fail_percentage=$(awk "BEGIN {print ($failed/$total)*100}")
          content="-----------------------------------\n\n"
          content+="üõ†Ô∏è **Job: ${{ github.job }}**\n"
          content+="üë§ **User: ${{ github.actor }}**\n"
          content+="üåé **Browser: ${{ matrix.browser }}**\n"
          content+="üî¢ **Shard: ${{ matrix.shard }}/2**\n"
          content+="üéâ **Passed**: ${passed}\n"
          content+="‚ùå **Failed**: ${failed}\n"
          content+="‚ö†Ô∏è **Skipped**: ${skipped}\n"
          content+="üìä **Total**: ${total}\n\n"
          content+="‚úÖ **Pass %**: ${pass_percentage}%\n"
          content+="‚ùå **Fail %**: ${fail_percentage}%\n\n"
          content+="-----------------------------------\n\n"
          curl --location "$DISCORD_WEBHOOK_URL" \
               --header 'Content-Type: application/json' \
               --data-raw "{
                   \"content\": \"$content\",
                   \"username\": \"TestBot\"
               }"